/**
* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*
* Copyright (c) 2016 LIBSCAPI (http://crypto.biu.ac.il/SCAPI)
* This file is part of the SCAPI project.
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
* to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*
* We request that any publication and/or code referring to and/or based on SCAPI contain an appropriate citation to SCAPI, including a reference to
* http://crypto.biu.ac.il/SCAPI.
*
* Libscapi uses several open source libraries. Please see these projects for any further licensing issues.
* For more information , See https://github.com/cryptobiu/libscapi/blob/master/LICENSE.MD
*
* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*
*/

INTRODUCTION
------------

This package contains an implementation of the GMW protocol.

A general explanation of the GMW protocol can be found at
http://crypto.biu.ac.il/sites/default/files/Winter%20School%2015%20-%20GMW%20and%20OT%20extension.pdf.
This implementation is more efficient since we use Beaver's multiplication triples instead of 1 out of 4 OT.


INSTALLATION AND EXECUTION
--------------------------

In order to compile and run The GMW application:
1. Go in the GMW directory.
2. Run:
$ cmake -G "Unix Makefiles"
$ make
3. to execute run :
 ./GMW -partyID [party_id] -circuitFileName [circuit_file_name] -partiesFileName [parties_file_name] -inputFileName [input_file_name] -numThreads [num_threads] -internalIterationsNumber [num_iterations]

 for example:
 ./GMW -partyID 0 -circuitFileName NigelAes3Parties.txt -partiesFileName Parties -inputFileName AesInputs0.txt -numThreads 2 -internalIterationsNumber 5
 This executes party number 0 of GMW protocol with 3 parties. The circuit is aes and two threads will be created (one for each other party)

There is a script that runs all the parties at once called run_protocol.sh. It should get four parameters:
1. The first party to run
2. The last party to run
3. The name of the circuit file
4. Number of threads to use in the execution.


The output of the protocol is the values of the output wires of this party. The protocol prints it to the screen.



